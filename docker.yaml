---
version: '3'

env:
  CURDIR:
    sh: pwd
  CONTAINER_NAME:
    sh: pwd | grep -Po "[^/]+$"
  USER_ID:
    sh: id | grep -Po "(?<=uid=)[0-9]+"
  GROUP_ID:
    sh: id | grep -Po "(?<=gid=)[0-9]+"

tasks:
  pre:
    preconditions:
      - sh: if (( $(echo {{.USER_ID}}) == 0 )); then exit 1; fi
        msg: "do not run as root user"

  default:
    desc: build and run the containers
    cmds:
      - task: pre
      - task: build
      - task: run

  rebuild:
    dir: docker
    desc: stop and remove running docker, run new one
    cmds:
      - task: pre
      - task: rm
      - task: default

  build:
    desc: build the container(s)
    dir: docker
    cmds:
      - task: pre
      - cmd: docker-compose build

  run:
    desc: run the containers
    dir: docker
    preconditions:
      - sh: whoami | grep -v root
        msg: "do not run containers as root user"
    cmds:
      - cmd: docker-compose up -d

  rm:
    desc: remove the containers
    dir: docker
    preconditions:
      - sh: whoami | grep -v root
        msg: "do not remove containers as root user"
    cmds:
      - cmd: docker-compose down --rmi all

  ls:
    desc: list images and containers belonging to this setup
    cmds:
      - cmd: docker-compose images
      - cmd: docker-compose ps

  sh:
    desc: open bash inside the application container
    cmds:
      - cmd: >-
          docker exec -it $(docker ps --filter 'Name=/{{.CONTAINER_NAME}}$'
          -q) /bin/bash #magic___^_^___line
